# Docker Compose environment variable configuration example
# Copy this file to .env and modify the configuration as needed

# ============================================================================
# Middleware Configuration
# ============================================================================

# PostgreSQL Configuration
POSTGRES_USER=spark
POSTGRES_PASSWORD=spark123
EXPOSE_POSTGRES_PORT=5432
# PostgreSQL connection configuration. If deploying middleware independently, modify the following configuration; otherwise, use default
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# MySQL Configuration
EXPOSE_MYSQL_PORT=3306
MYSQL_ROOT_PASSWORD=root123
# MySQL connection configuration. If deploying middleware independently, modify the following configuration; otherwise, use default
MYSQL_USER=root
MYSQL_PASSWORD=${MYSQL_ROOT_PASSWORD:-root123}
MYSQL_HOST=mysql
MYSQL_PORT=3306
MYSQL_URL=jdbc:mysql://mysql:3306/astron_console

# Redis Configuration
EXPOSE_REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password  # Optional, uncomment to enable authentication
REDIS_DATABASE=0
REDIS_IS_CLUSTER=false
REDIS_CLUSTER_ADDR=
REDIS_EXPIRE=3600
# Redis connection configuration. If deploying middleware independently, modify the following configuration; otherwise, use default
REDIS_ADDR=redis:6379
REDIS_HOST=redis
REDIS_PORT=6379

# Elasticsearch Configuration
EXPOSE_ELASTICSEARCH_PORT=9200
EXPOSE_ELASTICSEARCH_TRANSPORT_PORT=9300
ELASTICSEARCH_SECURITY_ENABLED=false
ES_JAVA_OPTS='-Xms512m -Xmx512m'

# Kafka Configuration
EXPOSE_KAFKA_PORT=9092
KAFKA_REPLICATION_FACTOR=1
KAFKA_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
KAFKA_TIMEOUT=60
# Kafka connection configuration. If deploying middleware independently, modify the following configuration; otherwise, use default
KAFKA_SERVERS=kafka:29092

# MinIO Configuration
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin123
EXPOSE_MINIO_PORT=9000
EXPOSE_MINIO_CONSOLE_PORT=9001

# OSS Configuration (can be replaced with your own OSS system)
OSS_TYPE=s3
OSS_ENDPOINT=http://minio:9000
OSS_ACCESS_KEY_ID=${MINIO_ROOT_USER:-minioadmin}
OSS_ACCESS_KEY_SECRET=${MINIO_ROOT_PASSWORD:-minioadmin123}
OSS_BUCKET_NAME=
OSS_TTL=157788000
OSS_DOWNLOAD_HOST=http://minio:9000

# OTLP Address
OTLP_ENABLE=0
OTLP_ENDPOINT=127.0.0.1:4317
OTLP_METRIC_TIMEOUT=3000
OTLP_METRIC_EXPORT_INTERVAL_MILLIS=3000
OTLP_METRIC_EXPORT_TIMEOUT_MILLIS=3000
# Tracing Configuration
OTLP_TRACE_TIMEOUT=3000
OTLP_TRACE_MAX_QUEUE_SIZE=2048
OTLP_TRACE_SCHEDULE_DELAY_MILLIS=3000
OTLP_TRACE_MAX_EXPORT_BATCH_SIZE=2048
OTLP_TRACE_EXPORT_TIMEOUT_MILLIS=3000

# ============================================================================
# astron-agent Application Port Configuration
# ============================================================================

# Core Service Port Configuration
CORE_TENANT_PORT=5052
CORE_MEMORY_PORT=7990
CORE_RPA_PORT=8003
CORE_LINK_PORT=18888
CORE_AITOOLS_PORT=18668
CORE_AGENT_PORT=17870
CORE_KNOWLEDGE_PORT=20010
CORE_WORKFLOW_PORT=7880

# Console Service Port Configuration
CONSOLE_FRONTEND_PORT=1881
CONSOLE_API_URL=http://localhost:8080
CONSOLE_HUB_PORT=8080

# ============================================================================
# Component-specific Environment Variable Configuration
# ============================================================================

# - Tenant-specific Configuration
# Database type
DATABASE_DB_TYPE=mysql
# Database username
DATABASE_USERNAME=${MYSQL_USER:-root}
# Database password
DATABASE_PASSWORD=${MYSQL_PASSWORD:-root123}
# Database (ip:port)/database name
DATABASE_URL=(mysql:3306)/tenant
# Database maximum connections
DATABASE_MAX_OPEN_CONNS=5
# Database maximum idle connections
DATABASE_MAX_IDLE_CONNS=5
# Log path
LOG_PATH=log.txt

# - Memory-specific Configuration
MEMORY_POSTGRES_DATABASE=sparkdb_manager

# - Link-specific Configuration
LINK_MYSQL_DB=spark-link

# - AITools-specific Configuration
AI_APP_ID=your-ai-app-id
AI_API_KEY=your-ai-api-key
AI_API_SECRET=your-ai-api-secret

# - Agent-specific Configuration
# Python environment configuration
PYTHONUNBUFFERED=1
# Runtime environment configuration
RUN_ENVIRON=dev
USE_POLARIS=false
# Service configuration
SERVICE_NAME=Agent
SERVICE_SUB=sag
SERVICE_APP=app:app
SERVICE_HOST=0.0.0.0
SERVICE_WORKERS=1
SERVICE_RELOAD=false
SERVICE_WS_PING_INTERVAL=false
SERVICE_WS_PING_TIMEOUT=false
# MySQL Configuration
AGENT_MYSQL_DB=agent
# ELK upload configuration
UPLOAD_NODE_TRACE=true
UPLOAD_METRICS=true
# Kafka
AGENT_KAFKA_TOPIC=spark-agent-builder
# Link Service URLs
GET_LINK_URL=http://core-link:18888/api/v1/tools
VERSIONS_LINK_URL=http://core-link:18888/api/v1/tools/versions
RUN_LINK_URL=http://core-link:18888/api/v1/tools/http_run
# Workflow Service URLs
GET_WORKFLOWS_URL=http://core-workflow:7880/sparkflow/v1/protocol/get
WORKFLOW_SSE_BASE_URL=http://core-workflow:7880/workflow/v1
# Knowledge Service URLs
CHUNK_QUERY_URL=http://core-knowledge:20010/knowledge/v1/chunk/query
# MCP Plugin URLs
LIST_MCP_PLUGIN_URL=http://core-link:18888/api/v1/mcp/tool_list
RUN_MCP_PLUGIN_URL=http://core-link:18888/api/v1/mcp/call_tool
# Application authentication configuration
APP_AUTH_HOST=core-tenant
APP_AUTH_ROUTER=/api-services/v2/app/details
APP_AUTH_PROT=http
APP_AUTH_API_KEY=default-api-key
APP_AUTH_SECRET=default-api-secret

# - Knowledge-specific Configuration
RAGFLOW_BASE_URL=http://your-ragflow-url/
RAGFLOW_API_TOKEN=your-ragflow-token
RAGFLOW_TIMEOUT=60
RAGFLOW_DEFAULT_GROUP=your-default-group

# - Hub-specific Configuration
# Astron Domain
ASTRON_DOMAIN=https://your.deployment.domain
# S3/MinIO Configuration
S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=astron-project
S3_PRESIGN_EXPIRY_SECONDS=600
# OAuth2 Configuration
OAUTH2_ISSUER_URI=http://auth-server:8000
OAUTH2_JWK_SET_URI=http://auth-server:8000/.well-known/jwks
OAUTH2_AUDIENCE=your-oauth2-client-id
# API_AUTH_SECRET
API_AUTH_SECRET=secret
# Common appId
COMMON_APPID=appid
COMMON_APIKEY=apiKey
COMMON_API_SECRET=apiSecret
# Toolkit tenant system
TENANT_ID=tenantId
TENANT_KEY=tenantKey
TENANT_SECRET=tenantSecret
# apikey, secret for Toolkit module
APP_APIKEY=apikey
APP_API_SECRET=apiSecret
# Toolkit Admin uid
ADMIN_UID=9999
# MaaS Platform Configuration
MAAS_APP_ID=your-maas-app-id
MAAS_API_KEY=your-maas-api-key
MAAS_API_SECRET=your-maas-api-secret
MAAS_CONSUMER_ID=your-maas-consumer-id
MAAS_CONSUMER_SECRET=your-maas-consumer-secret
MAAS_CONSUMER_KEY=your-maas-consumer-key

# - Workflow-specific Configuration
WORKFLOW_MYSQL_DB=workflow
WORKFLOW_KAFKA_TOPIC=spark-agent-builder
RUNTIME_ENV=dev

# ============================================================================
# Other Configuration
# ============================================================================

# Service availability zone (dx, hf, gz)
SERVICE_LOCATION=localhost

# Health check configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=60

# Network configuration
NETWORK_SUBNET=172.20.0.0/16

