# Docker Compose 环境变量配置示例
# 复制此文件为 .env 并根据需要修改配置

# ============================================================================
# 中间件配置
# ============================================================================

# PostgreSQL 配置
POSTGRES_USER=spark
POSTGRES_PASSWORD=spark123
EXPOSE_POSTGRES_PORT=5432
# PostgreSQL连接配置，如独立部署中间件，请修改下列配置，否则使用默认即可
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# MySQL 配置
EXPOSE_MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=root123
MYSQL_ROOT_PASSWORD=root123
# MySQL连接配置，如独立部署中间件，请修改下列配置，否则使用默认即可
MYSQL_HOST=mysql
MYSQL_PORT=3306
MYSQL_URL=jdbc:mysql://mysql:3306/astron_console

# Redis 配置
EXPOSE_REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password  # 可选，启用认证时取消注释
REDIS_DATABASE=0
REDIS_IS_CLUSTER=false
REDIS_CLUSTER_ADDR=
REDIS_ADDR=
REDIS_EXPIRE=3600
# REDIS连接配置，如独立部署中间件，请修改下列配置，否则使用默认即可
REDIS_HOST=redis
REDIS_PORT=6379

# Elasticsearch 配置
EXPOSE_ELASTICSEARCH_PORT=9200
EXPOSE_ELASTICSEARCH_TRANSPORT_PORT=9300
ELASTICSEARCH_SECURITY_ENABLED=false
ES_JAVA_OPTS='-Xms512m -Xmx512m'

# Kafka 配置
EXPOSE_KAFKA_PORT=9092
KAFKA_REPLICATION_FACTOR=1
KAFKA_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
KAFKA_SERVERS=
KAFKA_TIMEOUT=10

# MinIO 配置
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin123
EXPOSE_MINIO_PORT=9000
EXPOSE_MINIO_CONSOLE_PORT=9001

# OSS 配置
OSS_TYPE=s3
OSS_ENDPOINT=
OSS_ACCESS_KEY_ID=
OSS_ACCESS_KEY_SECRET=
OSS_BUCKET_NAME=
OSS_TTL=
OSS_DOWNLOAD_HOST=

# OTLP地址
OTLP_ENABLE=0
OTLP_ENDPOINT=127.0.0.1:1234
OTLP_METRIC_TIMEOUT=3000
OTLP_METRIC_EXPORT_INTERVAL_MILLIS=3000
OTLP_METRIC_EXPORT_TIMEOUT_MILLIS=3000
# 链路追踪配置
OTLP_TRACE_TIMEOUT=3000
OTLP_TRACE_MAX_QUEUE_SIZE=2048
OTLP_TRACE_SCHEDULE_DELAY_MILLIS=3000
OTLP_TRACE_MAX_EXPORT_BATCH_SIZE=2048
OTLP_TRACE_EXPORT_TIMEOUT_MILLIS=3000

# ============================================================================
# astron-agent 应用端口配置
# ============================================================================

# 核心服务端口配置
CORE_TENANT_PORT=5052
CORE_MEMORY_PORT=7990
CORE_RPA_PORT=8003
CORE_LINK_PORT=18888
CORE_AITOOLS_PORT=18668
CORE_AGENT_PORT=17870
CORE_KNOWLEDGE_PORT=20010
CORE_WORKFLOW_PORT=7880

# 控制台服务端口配置
CONSOLE_FRONTEND_PORT=1881
CONSOLE_HUB_PORT=8080

# ============================================================================
# 各组件特有环境变量配置
# ============================================================================

# - Tenant 特有配置
# 数据库类型
DATABASE_DB_TYPE=mysql
# 数据库用户名
DATABASE_USERNAME=root
# 数据库密码
DATABASE_PASSWORD=root123
# 数据库（ip:端口号）/库名
DATABASE_URL=(mysql:3306)/tenant
# 数据库最大链接数
DATABASE_MAX_OPEN_CONNS=5
# 数据库最大空闲链接数
DATABASE_MAX_IDLE_CONNS=5
# 日志路径
LOG_PATH=log.txt

# - Memory 特有配置
MEMORY_POSTGRES_DATABASE=sparkdb_manager

# - Link 特有配置
LINK_MYSQL_DB=spark-link

# - AITools 特有配置
AI_APP_ID=your-ai-app-id
AI_API_KEY=your-ai-api-key
AI_API_SECRET=your-ai-api-secret

# - Agent 特有配置
# Python 环境配置
PYTHONUNBUFFERED=1
# 运行环境配置
RUN_ENVIRON=dev
USE_POLARIS=false
# 服务配置
SERVICE_NAME=Agent
SERVICE_SUB=sag
SERVICE_APP=app:app
SERVICE_HOST=0.0.0.0
SERVICE_WORKERS=1
SERVICE_RELOAD=false
SERVICE_WS_PING_INTERVAL=false
SERVICE_WS_PING_TIMEOUT=false
# MySQL 配置
AGENT_MYSQL_DB=agent
# ELK 上传配置
UPLOAD_NODE_TRACE=true
UPLOAD_METRICS=true
# Kafka
AGENT_KAFKA_TOPIC=spark-agent-builder
# Link 服务 URLs
GET_LINK_URL=http://core-link:18888/api/v1/tools
VERSIONS_LINK_URL=http://core-link:18888/api/v1/tools/versions
RUN_LINK_URL=http://core-link:18888/api/v1/tools/http_run
# Workflow 服务 URLs
GET_WORKFLOWS_URL=http://core-workflow:7880/sparkflow/v1/protocol/get
WORKFLOW_SSE_BASE_URL=http://core-workflow:7880/workflow/v1
# Knowledge 服务 URLs
CHUNK_QUERY_URL=http://core-knowledge:10007/knowledge/v1/chunk/query
# MCP 插件 URLs
LIST_MCP_PLUGIN_URL=http://YOUR_MCP_HOST:18888/api/v1/mcp/tool_list
RUN_MCP_PLUGIN_URL=http://YOUR_MCP_HOST:18888/api/v1/mcp/call_tool
# 应用认证配置
APP_AUTH_HOST=YOUR_APP_AUTH_HOST
APP_AUTH_ROUTER=/api-services/v2/app/details
APP_AUTH_PROT=http
APP_AUTH_API_KEY=YOUR_APP_AUTH_API_KEY
APP_AUTH_SECRET=YOUR_APP_AUTH_SECRET

# - Knowledge 特有配置
RAGFLOW_BASE_URL=http://your-ragflow-url/
RAGFLOW_API_TOKEN=your-ragflow-token
RAGFLOW_TIMEOUT=60
RAGFLOW_DEFAULT_GROUP=your-default-group

# - Hub 特有配置
# Astron Domain
ASTRON_DOMAIN=https://your.deployment.domain
# S3/MinIO 配置
S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=minioadmin
S3_BUCKET=astron-project
S3_PRESIGN_EXPIRY_SECONDS=600
# OAuth2 配置
OAUTH2_ISSUER_URI=http://auth-server:8000
OAUTH2_JWK_SET_URI=http://auth-server:8000/.well-known/jwks
OAUTH2_AUDIENCE=your-oauth2-client-id
# API_AUTH_SECRET
API_AUTH_SECRET=secret
# 公共 appId
COMMON_APPID=appid
COMMON_APIKEY=apiKey
COMMON_API_SECRET=apiSecret
# toolkit 租户体系
TENANT_ID=tenantId
TENANT_KEY=tenantKey
TENANT_SECRET=tenantSecret
# apikey, secret for Toolkit module
APP_APIKEY=apikey
APP_API_SECRET=apiSecret
# Toolkit Admin uid
ADMIN_UID=9999
# MaaS Platform Configuration
MAAS_APP_ID=your-maas-app-id
MAAS_API_KEY=your-maas-api-key
MAAS_API_SECRET=your-maas-api-secret
MAAS_CONSUMER_ID=your-maas-consumer-id
MAAS_CONSUMER_SECRET=your-maas-consumer-secret
MAAS_CONSUMER_KEY=your-maas-consumer-key

# - Workflow 特有配置
WORKFLOW_MYSQL_DB=workflow
WORKFLOW_KAFKA_TOPIC=spark-agent-builder
RUNTIME_ENV=dev

# ============================================================================
# 其他配置
# ============================================================================

# 服务所在可用区（dx、hf、gz）
SERVICE_LOCATION=localhost

# 健康检查配置
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=60

# 网络配置
NETWORK_SUBNET=172.20.0.0/16

