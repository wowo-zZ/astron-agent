const translation = {
  botApi: 'Bot API',
  botApiDesc:
    'Integrate the API interface of the intelligent agent into the external application directly',
  botApiCert: 'Complete certification',
  botApiCertDesc:
    'Complete platform certification to call the API interface of the intelligent agent',
  botApiCertSuccess: 'Certified',
  botApiCertBtn: 'Go to certification >',
  bindApp: 'Bind application',
  bindAppDesc: 'Bind your application to get authentication parameters',
  createApi: 'Create API',
  callService: 'Call service',
  callServiceDesc: 'Follow the interface document, call the service',
  apiDoc: 'API document',
  apiCertInfo: 'Service interface authentication information',
  viewApiDoc: 'View API document',
  bindAppID: 'Bound APPID:',
  appName: 'Application name:',
  createApp: 'createApp',
  createAppName: 'appName',
  createAppNameRequired: 'Please input appName',
  createAppNamePlaceholder:
    'Please create an app name with fewer than 30 characters',
  createAppDesc: 'appDesc',
  createAppDescPlaceholder:
    'Please describe the usage scenarios, application characteristics, etc.,fewer than 300 characters',
  unNamed: 'Unnamed',
  updateBind: 'Update binding',
  selectApp: 'Select your application to bind',
  bindAppBtn: 'Bind now',
  pythonDemoDownload: 'python demo download',
  javaDemoDownload: 'java demo download',
  bindAppSuccess: 'Bind success',
  bindAppTips:
    'After binding, you can view the specific interface authentication parameters. Once bound, the application cannot be modified. Please choose carefully',
  bindAppTips2: 'Please bind the application to view',
  serviceUrl: 'Service URL',
  todayUsedTokenNum: 'Today used token number',
  remainTokenNum: 'Remaining token number',
  warmTips: 'Warm Tips',
  apiKeyWarn:
    'If you do not want your application API to be abused, please protect your APIKey. The best way is to avoid referencing it in plain text in the front-end code.',
  modal: {
    title: 'Package Selection',
    confirm: 'Confirm',
    cancel: 'Cancel',
    tips: 'â€‹Important: This action cannot be undone.',
    selectOrder: 'Please select the package',
    skip: 'Skip and Publish',
  },
  SmartBodyPublish: {
    title: 'Smart Body Publish',
    titleDesc:
      'Integrate the API interface of the intelligent agent into the external application directly',
    queryAuthRecord: 'Query Authorization Record',
    publishFlow: 'Publish Flow',
    createKey: 'Create Key',
    bindKey: 'Bind Key',
    publishAgent: 'Publish Agent',
    createKeyTip: 'Create key in the release management - API key',
    bindKeyTip: 'Bind key, limit the quota of the intelligent agent',
    callServiceTip: 'Call the service according to the interface document',
    createKeyBtn: 'Create Key',
    viewDoc: 'View Document',
    pleaseFillCurrentBindItem: 'Please fill in the current binding item',
    quotaTip: 'The quota only supports increasing, not decreasing',
    updateBindSuccess: 'Update binding success',
    bindKeySuccess: 'Bind success',
    bindKeyFail: 'Bind fail',
    pleaseSelectKey: 'Please select key',
    pleaseInputQuota: 'Please input quota, the maximum is',
    pleaseInputNonNegativeInteger: 'Please input non-negative integer quota',
  },
  bindKeyListItem: {
    addServiceInterface: 'Add Service Interface',
    editServiceInterface: 'Edit Service Interface',
    serviceInterfaceInfo: 'Service Interface Info',
    keySelection: 'Key Selection',
    pleaseSelectKey: 'Please select key',
    quota: 'Quota',
    tokensRemain: 'Tokens Remain:',
    pleaseFillQuota: 'Please fill quota',
    keyName: 'Key Name',
    pleaseSelectKeyAndFillQuota: 'Please select key and fill quota',
    bindBtn: 'Bind Now',
    updateBindBtn: 'Update Bind',
    viewApiDoc: 'View API Doc',
    bindKeyTip:
      'Bind key after you can view the specific interface authentication parameters, the key binding cannot be modified, please choose carefully and assign quota',
    pleaseBindKeyTip: 'Please bind key after you can view',
    modelName: 'Model Name',
    todayUsedTokensNum: 'Today Used Tokens Num',
    remainTokensNum: 'Remain Tokens Num',
    bindKeyTokensTip: 'Bind key after you can view the tokens usage',
    serviceUrl: 'Service URL',
  },
};

export default translation;
