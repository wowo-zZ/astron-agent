export default {
  // Search related keys
  confirmSubmitScoringResults: 'Confirm submit scoring results',
  pleaseSelectDimensionScore: 'Please select dimension score',
  pleaseSelectNode: 'Please select node',
  manualEvaluationTitle: 'Manual Evaluation',
  allModes: 'All Modes',
  manualEvaluation: 'Manual Evaluation',
  automaticEvaluation: 'Auto Evaluation',
  allTypes: 'All Types',
  agentInstructionType: 'Agent Command',
  agentWorkflow: 'Agent Workflow',
  prompt: 'Prompt',
  evaluationMode: 'Evaluation Mode',
  evaluationType: 'Evaluation Type',
  taskName: 'Task Name',
  createTask: 'Create Task',
  debugRequiredForTaskCreation: 'Debug Required for Task Creation',
  debugRequiredDescription:
    'Current workflow not debugged successfully, please debug first before creating task',

  // New header navigation related keys
  evaluationTask: 'Evaluation Tasks',
  evaluationSetManagement: 'Test Set Management',
  evaluationDimensionsManagement: 'Test Dimensions',

  // New table related keys
  unknownMode: 'Unknown Mode',
  manualAndAutomaticEvaluation: 'Manual and Automatic Evaluation',
  unknownCombination: 'Unknown Combination',
  running: 'Running',
  completed: 'Completed',
  runFailed: 'Run Failed',
  marked: 'Marked',
  pendingScore: 'Pending Score',
  terminating: 'Terminating',
  creating: 'Creating',
  pending: 'Pending',
  details: 'Details',
  scoring: 'Scoring',
  terminate: 'Terminate',
  more: 'More',
  confirmRecreate: 'Confirm Recreate',
  reservedMode: 'Reserved Mode',
  confirmDeleteEvaluationTask: 'Confirm delete this evaluation task',
  currentTaskRunning: 'Current task is running',
  scoringCompleted: 'Scoring completed',
  currentTaskRunFailed: 'Current task run failed',
  currentTaskPendingScore: 'Current task pending score',
  currentTaskTerminating: 'Current task is terminating',
  currentTaskPaused: 'Current task is paused',
  terminateOperationWarning: 'Terminate operation warning',
  totalDataItems: 'Total {{count}} data items',

  // New basic table keys
  status: 'Status',
  createTime: 'Created At',
  operations: 'Actions',
  evaluationSet: 'Test set',
  evaluationObject: 'Target',
  taskMode: 'Task Mode',

  // New debug preview related keys
  promptConfiguration: 'Prompt Configuration',
  promptText: 'Prompt:',
  rerun: 'Rerun',
  clickRunToDisplay: 'Click run to display',
  runFailedPleaseTryAgain: 'Run failed, please try again',
  displayScoreAndReasonAfterRun: 'Display score and reason after run',

  // New missing keys
  debugPreview: 'Debug Preview',
  currentModel: 'Current Model',
  aiOptimize: 'AI Optimize',
  userInput: 'User Input',
  run: 'Run',
  thinking: 'Thinking',
  evaluationResult: 'Evaluation Result',
  score: 'Score',
  scoreReason: 'Score Reason',
  pleaseEnterDimensionNameForOptimization:
    'For more accurate optimization, please enter the specific dimension name first',
  workflowNotDebuggedSuccessfully: 'Workflow not debugged successfully',
  currentVersionNotPublishedSuccessfully:
    'Current version not published successfully',

  // New testData related keys
  testData: {
    serialNumber: 'No.',
    sid: 'SID',
    question: 'Question',
    answer: 'Answer',
    moreAnswer: 'Answer_{{key}}',
    expectedAnswer: 'Expected Answer',
    performanceTimeCost: 'Performance Time Cost',
    firstFrameCost: 'First Frame Cost',
    status: 'Status',
    f1Score: 'F1 Score',
    precision: 'Precision',
    recall: 'Recall',
    poor: 'Poor',
    general: 'General',
    better: 'Better',
    excellent: 'Excellent',
    all: 'All',
    terminated: 'Terminated',
    effectScore: 'Effect Score',
    scoringFailed: 'Scoring Failed',
    notScored: 'Not Scored',
    scoringReason: 'Scoring Reason',
    notFilled: 'Not Filled',
    intelligentScoring: 'Intelligent Scoring',
    intelligentScoringReason: 'Intelligent Scoring Reason',
    manualScoring: 'Manual Scoring',
    manualScoringReason: 'Manual Scoring Reason',
    evaluationDimension: 'Evaluation Dimension',
    operations: 'Actions',
    view: 'View',
    alreadyFirstDataOnThisPage: 'Already the first data on this page',
    alreadyLastDataOnThisPage: 'Already the last data on this page',
    totalDataItems: 'Total {{count}} data items',
    previous: 'Previous',
    next: 'Next',
    enterScoringReason: 'Please enter scoring reason',
  },

  dimensions: {
    create: {
      newDimension: 'New Dimension',
      dimensionName: 'Dimension Name:',
      dimensionDescription: 'Dimension Description:',
      promptPreview: 'Prompt Preview:',
      promptPreviewAndEdit: 'Prompt Preview and Edit',
      pleaseEnterDimensionName: 'Please enter dimension name',
      dimensionNameLengthLimit: 'Dimension name cannot exceed 50 characters',
      pleaseEnter: 'Please enter',
      pleaseEnterDimensionDescription: 'Please enter dimension description',
      sceneType: 'Scene Type:',
      sceneTypeSelection: 'Scene Type Selection',
      sceneTypeSelectionDesc:
        'If a dimension applies to multiple task scenarios, scene type supports multiple selection, up to 3',
      pleaseSelectEvaluationScene: 'Please select evaluation scene',
      newType: 'New Type',
      pleaseEnterType: 'Please enter type',
      sceneType1: 'Scene Type 1',
      evaluationSceneNameExists: 'Evaluation scene name already exists!!!',
      debugPreview: 'Debug Preview',
      aiOptimize: 'AI Optimize',
      debugPreviewSuccessRequired:
        'Debug preview must succeed before submitting',
      promptCannotBeEmpty: 'Prompt cannot be empty!',
      enterDimensionNameForOptimization:
        'For more accurate optimization, please enter the specific dimension name first',
      debugPreviewSuccessCallback: 'Debug preview success callback',
      cancel: 'Cancel',
      submit: 'Submit',
      noSubVariables: 'This variable has no sub-variables',
    },
    search: {
      selectSceneType: 'Select Scenario Type',
      pleaseEnterEvaluationDimensionName:
        'Please enter evaluation dimension name',
      reset: 'Reset',
      query: 'Search',
      batchImport: 'Batch Import',
      newDimension: 'New Dimension',
    },
    table: {
      serialNumber: 'No.',
      evaluationDimensionName: 'Dimension Name',
      sceneType: 'Scene Type',
      dimensionDescription: 'Dimension Description',
      updateTime: 'Update Time',
      creator: 'Creator',
      operation: 'Actions',
      viewDetails: 'View Details',
      edit: 'Edit',
      delete: 'Delete',
      confirmDeleteDimension: 'Confirm delete this evaluation dimension?',
      confirm: 'Confirm',
      cancel: 'Cancel',
      official: 'Official',
      totalDataCount: 'Total {{total}} data items',
    },
    import: {
      title: 'Evaluation Dimension',
      downloadTemplate: 'Download Template',
      dragFileHere: 'Drag file here, or',
      selectFile: 'Select File',
      fileFormatDescription: 'File format is XLSX, file size up to 2MB.',
      fileSizeExceeded: 'Uploaded file size cannot exceed 2MB!',
      pleaseUploadXlsxFile: 'Please upload .xlsx file',
      importSuccess: 'Import successful',
      cancel: 'Cancel',
      confirm: 'Confirm',
    },
  },
  dataset: {
    search: {
      evaluationSetName: 'Test set Name',
      evaluationSetNamePlaceholder: 'Test set Name',
      trainingSetName: 'Training Set Name',
      trainingSetNamePlaceholder: 'Training Set Name',
      associatedAppName: 'Associated App Name:',
      associatedAppNamePlaceholder: 'Please enter',
      reset: 'Reset',
      query: 'Search',
      newEvaluationSet: 'New Test set',
    },
    table: {
      serialNumber: 'No.',
      evaluationSetName: 'Test set Name',
      trainingSetName: 'Training Set Name',
      associatedAppName: 'Associated App Name',
      latestVersion: 'Latest Version',
      versionCount: 'Versions',
      versionUpdateTime: 'Update Date',
      operation: 'Actions',
      viewDetails: 'View Details',
      download: 'Download',
      addVersion: 'Add Version',
      delete: 'Delete',
      confirmDeleteEvaluationSet: 'Confirm delete this evaluation set?',
      confirmDeleteTrainingSet: 'Confirm delete this training set?',
      confirm: 'Confirm',
      cancel: 'Cancel',
      totalDataCount: 'Total {{total}} data items',
    },
    modal: {
      download: 'Download',
      selectEvaluationSetVersion: 'Select Test set Version',
      selectTrainingSetVersion: 'Select Training Set Version',
      pleaseSelectDownloadVersion: 'Please select download version',
      selectAll: 'Select All',
      cancel: 'Cancel',
      confirm: 'Confirm',
    },
    create: {
      batchImport: 'Batch Import',
      newVersion: 'New Version',
      newEvaluationSet: 'New Test set',
      evaluationSetName: 'Test set Name:',
      evaluationSetNamePlaceholder: 'Please enter evaluation set name',
      pleaseEnterEvaluationSetName: 'Please enter evaluation set name',
      versionName: 'Version Name:',
      versionNamePlaceholder: 'Please enter evaluation set version name',
      pleaseEnterVersionName: 'Please enter version name',
      versionDescription: 'Version Description:',
      versionDescriptionPlaceholder: 'Please enter version description',
      dataUpload: 'Data Upload:',
      pleaseSelectDataUpload: 'Please select data upload',
      downloadEvaluationTemplate: 'Download Evaluation Template',
      dragFileHere: 'Drag file here, or',
      selectFile: 'Select File',
      fileFormatExcel: 'File format is XLSX, file size up to 20MB',
      fileFormatJsonl: 'File format is jsonl, file size up to 20MB',
      preview: 'Preview',
      serialNumber: 'No.',
      input: 'Input',
      actualOutput: 'Actual Output',
      expectedOutput: 'Expected Output',
      statusValue: 'Status Value',
      operation: 'Actions',
      delete: 'Delete',
      success: 'Success',
      failed: 'Failed (Error Code: {code})',
      uploadFileEmpty: 'Uploaded file cannot be empty!',
      fileSizeExceeded: 'Uploaded file size cannot exceed 20MB!',
      fileFormatShouldBeExcel: 'File format should be excel',
      fileFormatShouldBeJsonl: 'File format should be jsonl',
      pleaseUploadEvaluationSet: 'Please upload evaluation set',
      onlineDataCannotBeEmpty: 'Online data cannot be empty',
      cancel: 'Cancel',
      save: 'Save',
      saveAndCreate: 'Save and Create',
    },
    detail: {
      fieldCannotBeEmpty: '{{field}} cannot be empty!',
      serialNumber: 'No.',
      input: 'Input',
      expectedOutput: 'Expected Output',
      dataSource: 'Data Source',
      offline: 'Offline',
      online: 'Online',
      operation: 'Actions',
      save: 'Save',
      confirmCancel: 'Confirm cancel?',
      cancel: 'Cancel',
      edit: 'Edit',
      confirmDelete: 'Confirm delete?',
      delete: 'Delete',
      back: 'Back',
      versionName: 'Version Name',
      confirmDeleteVersion: 'Confirm delete this version?',
      confirm: 'Confirm',
      noVersion: 'No version',
      addVersion: 'Add Version',
      batchImport: 'Batch Import',
      batchDelete: 'Batch Delete',
      downloadDataset: 'Download Dataset',
      add: 'Add',
      totalDataCount: 'Total {{total}} data items',
      confirmDeleteSelectedData: 'Confirm delete selected data?',
      checkVersionExsit:
        'Please create a version first before performing this action!',
    },
  },
  publishedFlow: {
    firstFrameTimeCost: 'First Frame Time Cost',
    serialNumber: 'No.',
    input: 'Input',
    actualOutput: 'Actual Output',
    statusValue: 'Status Value',
    operation: 'Actions',
    delete: 'Delete',
    success: 'Success',
    failed: 'Failed (Error Code: {code})',
    taskName: 'Task Name:',
    pleaseEnterTaskName: 'Please enter task name',
    selectApplicationVersion: 'Select Application Version:',
    pleaseSelectApplicationVersion: 'Please select application version',
    selectEvaluationMethod: 'Select Evaluation Method:',
    pleaseSelectEvaluationMethod: 'Please select evaluation method',
    selectTaskMode: 'Select Task Mode:',
    pleaseSelectTaskMode: 'Please select task mode',
    selectEvaluationSet: 'Select Test set:',
    pleaseSelectEvaluationSet: 'Please select evaluation set',
    releasedVersion: 'Released Version',
    onlineDraftVersion: 'Online Draft Version',
    onlineDraftVersionTip:
      'Online draft version needs to pass debugging before creating evaluation task.',
    onlineLogPullTest: 'Online Log Pull Test',
    offlineBatchDataTest: 'Offline Batch Data Test',
    batchDataTestOnly: 'Batch Data Test Only',
    batchDataTestOnlyDesc: 'Only run batch data and view results',
    manualEvaluation: 'Manual Evaluation',
    manualEvaluationDesc:
      'Execute batch data, get output results, manually score results, and finally generate evaluation report',
    automatedEvaluation: 'Automated Evaluation',
    automatedEvaluationTip:
      'Automated evaluation test dataset needs to clearly include expected answers',
    similarityComparison: 'Similarity Comparison',
    exactComparison: 'Exact Comparison',
    similarityComparisonDesc:
      'Similarity comparison: refers to using automated tools to compare the similarity between results and targets',
    exactComparisonDesc:
      'Exact comparison: refers to using automated tools to compare whether results and targets match exactly',
    samplingPeriod: 'Sampling Period:',
    pleaseSelectSamplingPeriod: 'Please select sampling period',
    sampleTotal: 'Sample Total:',
    pleaseEnterSampleTotal: 'Please enter sample total',
    samplingMethod: 'Sampling Method:',
    pleaseSelectSamplingMethod: 'Please select sampling method',
    sequentialSampling: 'Sequential Sampling',
    randomSampling: 'Random Sampling',
    likeDislike: 'Like/Dislike',
    testData: 'Test Data:',
    pullLogs: 'Pull Logs',
    totalDataCount: 'Total {{total}} data items',
    cancel: 'Cancel',
    viewEvaluationSetData: 'View Test set Data',
    submit: 'Submit',
    newEvaluationSet: 'New Test set',
    newEvaluationSetVersion: 'New Test set Version',
  },
  unpublishedFlow: {
    newTask: 'New Task',
    selectEvaluationObject: 'Select Target',
    configureEvaluationDimensions: 'Configure Evaluation Dimensions',
    initiateEvaluation: 'Initiate Evaluation',
    taskName: 'Task Name:',
    pleaseEnter: 'Please enter',
    pleaseEnterTaskName: 'Please enter task name',
    evaluationType: 'Evaluation Type',
    pleaseSelectEvaluationType: 'Please select evaluation type',
    evaluationObject: 'Target:',
    pleaseSelectEvaluationObject: 'Please select evaluation object',
    selectEvaluationSet: 'Select Test set:',
    pleaseSelectEvaluationSet: 'Please select evaluation set',
    viewEvaluationSetData: 'View Test set Data',
    selectTaskMode: 'Select Task Mode:',
    pleaseSelectTaskMode: 'Please select task mode',
    agentInstructionType: 'Agent Command',
    agentWorkflow: 'Agent Workflow',
    prompt: 'Prompt',
    instructionType: 'Instruction Type',
    workflow: 'Workflow',
    manualEvaluation: 'Manual Evaluation',
    manualEvaluationDesc:
      'Execute batch data, get output results, manually score results, and finally generate evaluation report',
    intelligentEvaluation: 'Intelligent Evaluation',
    intelligentEvaluationDesc:
      'Input judge model to evaluate content, finally generate evaluation report',
    oneClickParallel: 'One-Click Parallel',
    oneClickParallelDesc:
      'First AI preliminary evaluation, then manual verification, collaboratively generate comprehensive evaluation report',
    judgeModelSelection: 'Judge Model Selection:',
    pleaseSelectJudgeModel: 'Please select judge model',
    deepseekV3: 'DeepSeek-V3',
    deepseekV3Desc:
      'Powerful knowledge understanding and answering capabilities, suitable for various scenarios',
    sparkX1: 'Spark-X1',
    sparkX1Desc:
      'Input judge model to evaluate content, finally generate evaluation report',
    evaluationIndicators: 'Evaluation Dimension',
    pleaseSelectEvaluationIndicators: 'Please select evaluation dimension',
    selectedIndicators: 'Selected Indicators',
    addCustomDimension: 'Add Custom Dimension',
    addCustomIndicator: 'Add Custom Indicator',
    promptPreviewAndEdit: 'Prompt Preview and Edit',
    restoreDefault: 'Restore Default',
    debugPreview: 'Debug Preview',
    aiOptimize: 'AI Optimize',
    promptCannotBeEmpty: 'Prompt cannot be empty!',
    enterDimensionNameForOptimization:
      'For more accurate optimization, please enter the specific dimension name first',
    dimensionNameCannotBeRepeated: 'Dimension name cannot be repeated',
    currentEffectEvaluationNotSupportQANode:
      'Current effect evaluation temporarily does not support workflow evaluation with QA nodes',
    cancel: 'Cancel',
    nextStep: 'Next Step',
    previousStep: 'Previous Step',
    startEvaluation: 'Start Evaluation',
    hold: 'Hold',
    newEvaluationSet: 'New Test set',
    newEvaluationSetVersion: 'New Test set Version',
    draftVersion: 'Draft Version',
    workflowNotDebuggedSuccessfully: 'Workflow not debugged successfully',
    currentVersionPublishNotSuccessful:
      'Current version publish not successful, evaluation function not supported',
    workflowMultiParameterInput:
      'Current workflow is multi-parameter input, evaluation function not supported',
    unknownName: 'Unknown Name',
  },
  debuggingPreview: {
    title: 'Debug Preview',
    promptConfig: 'Prompt Config',
    currentModel: 'Current Model:',
    deepseekV3: 'DeepSeek V3',
    prompt: 'Prompt:',
    aiOptimize: 'AI Optimize',
    evaluationType: 'Evaluation Type:',
    evaluationObject: 'Target:',
    userInput: 'User Input',
    pleaseEnter: 'Please enter',
    actualOutput: 'Actual Output',
    evaluationResult: 'Evaluation Result',
    agentInstructionType: 'Agent Command',
    agentWorkflow: 'Agent Workflow',
    promptType: 'Prompt',
    cancel: 'Cancel',
    save: 'Save',
    run: 'Run',
    runAgain: 'Run Again',
    thinking: 'Thinking...',
    clickRunToShow: 'Click run to show',
    runFailed: 'Run failed, please try running again',
    runToShowScore: 'Run to show score and score reason',
    scoreReason: 'Score Reason:',
    score: 'Score',
    promptCannotBeEmpty: 'Prompt cannot be empty!',
    enterDimensionNameForOptimization:
      'For more accurate optimization, please enter the specific dimension name first',
  },
  evaluationSetData: {
    serialNumber: 'No.',
    input: 'Input',
    dataSource: 'Data Source',
    offline: 'Offline',
    online: 'Online',
    back: 'Back',
    evaluationSetDetail: 'Test set Detail',
    totalDataCount: 'Total {{total}} data items',
  },
  recommendTip: {
    recommend: 'Recommend',
  },
  dimension: {
    addCustomDimension: 'Add Custom Dimension',
    evaluationDimensionName: 'Dimension Name:',
    pleaseEnterEvaluationDimensionName:
      'Please enter evaluation dimension name',
    pleaseEnter: 'Please enter',
    viewAllDimensions:
      'To centrally view and manage all evaluation dimensions, please go to ',
    evaluationDimensionManagement: 'Evaluation Dimension Management',
    cancel: 'Cancel',
    confirm: 'Confirm',
    addDimension: 'Evaluation Dimension',
  },
  flowEvaluationDetail: {
    back: 'Back',
    basicInfo: 'Basic Info',
    testData: 'Test Data',
    evaluationReport: 'Evaluation Report',
    evaluationMode: 'Evaluation Mode',
    selectEvaluationDimension: 'Select Evaluation Dimension',
    pleaseSelect: 'Select Score',
    one: 'one',
    two: 'two',
    three: 'three',
    four: 'four',
    all: 'All',
    manualEvaluation: 'Manual Evaluation',
    intelligentEvaluation: 'Intelligent Evaluation',
    resetScore: 'Reset Score',
    confirmReset:
      'Reset operation will interrupt the task and cannot be recovered, do you confirm to continue?',
    confirm: 'Confirm',
    cancel: 'Cancel',
    downloadToLocal: 'Download to Local',
    recreate: 'Recreate',
    rescore: 'Rescore',
    goToScore: 'Go to Score',
    initiateIntelligentEvaluation: 'Initiate Intelligent Evaluation',
    initiateManualEvaluation: 'Initiate Manual Evaluation',
    taskTerminating: 'Current task is terminating, please try again later',
    taskRunning: 'Current task is running, please try again later',
    operationFailed: 'Actions failed:',
  },
  baseInfo: {
    batchDataTestOnly: 'Batch Data Test Only',
    manualEvaluation: 'Manual Evaluation',
    automatedEvaluation: 'Automated Evaluation',
    running: 'Running',
    completed: 'Completed',
    failed: 'Failed',
    pendingScore: 'Pending Score',
    terminating: 'Terminating',
    terminated: 'Terminated',
    unknownStatus: 'Unknown Status',
    evaluationTaskName: 'Task Name:',
    evaluationObject: 'Target:',
    evaluationSet: 'Test set:',
    taskMode: 'Task Mode:',
    taskStatus: 'Task Status:',
  },
  evaluationReport: {
    serialNumber: 'No.',
    question: 'Question',
    answer: 'Answer',
    expectedAnswer: 'Expected Answer',
    performanceTimeCost: 'Performance Time Cost',
    firstFrameCost: 'First Frame Cost',
    statusValue: 'Status Value',
    success: 'Success',
    failed: 'Failed (Error Code: {code})',
    nodeName: 'Node Name',
    input: 'Input',
    output: 'Output',
    reportConclusion: 'Report Conclusion',
    effectScore: 'Effect Score',
    effectScoreTip:
      '0~60 points, poor effect, large result deviation; 61~80 points, general effect, obvious optimization space; 81~100 points, very good effect, close to or reaching actual application requirements.',
    passRate: 'Pass Rate',
    taskCount: 'Task Count',
    successCount: 'Success Count',
    failCount: 'Fail Count',
    optimizationSuggestions: 'Optimization Suggestions',
    goToTroubleshoot: 'Go to Troubleshoot',
    errorData: 'Error Data',
    totalDataCount: 'Total {{total}} data items',
    generating: 'Generating, please wait',
  },
  poor: 'Poor',
  general: 'General',
  better: 'Better',
  excellent: 'Excellent',
  answer: 'Answer',
  existUnscoredQuestions: 'Current dimension has unscored Q&A, submit?',
  currentDimensionExistUnscoredQuestions:
    'Current dimension has unscored Q&A, submit?',
  serialNumber: 'No.',
  question: 'Question',
  expectedAnswer: 'Expected Answer',
  evaluationDimension: 'Evaluation Dimension',
  terminated: 'Terminated',

  // TaskReport component related translation keys
  taskReport: {
    intelligentEvaluation: 'Intelligent Evaluation',
    manualEvaluation: 'Manual Evaluation',
    evaluationTotalScore: 'Evaluation Total Score',
    intelligentEvaluationTotalScore: 'Intelligent Evaluation Total Score',
    basedOnDimensionComprehensiveScore:
      'Based on Dimension Comprehensive Score',
    manualEvaluationTotalScore: 'Manual Evaluation Total Score',
    basedOnExpertReviewComprehensiveScore:
      'Based on Expert Review Comprehensive Score',
    averageScore: 'Average Score',
    averageScoreComparison: 'Average Score Comparison Overview',
    intelligentEvaluationLabel: 'Intelligent Evaluation',
    manualEvaluationLabel: 'Manual Evaluation',
    difference: 'Difference',
    dimensionScoreDetails: 'Dimension Score Details',
  },
  // ToolNode component translations
  oneClickUpdate: 'One Click Update',
  // ModalPreview component translations
  confirmInitiateEvaluation: 'Confirm Initiate',
  intelligent: 'Intelligent',
  manual: 'Manual',
  reserved: 'Reserved',
  evaluation: 'Evaluation',
  appendCurrentTask: 'Will append current',
  originalTaskDataRemainsUnchanged: 'Original task data remains unchanged',
};
